{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { OldPwdValidators } from '../../components/old-pwd.validators';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport 'sweetalert2/src/sweetalert2.scss';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\n\nfunction ClientUpdatePwdComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Old Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_20_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Old Password is not valid.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ClientUpdatePwdComponent_div_20_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵtemplate(2, ClientUpdatePwdComponent_div_20_div_2_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.oldPwd.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.oldPwd.errors.shouldBe1234);\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"New Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ClientUpdatePwdComponent_div_25_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.newPwd.errors.required);\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirm Password is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, ClientUpdatePwdComponent_div_30_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.confirmPwd.errors.required);\n  }\n}\n\nfunction ClientUpdatePwdComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1, \" Passwords do not match. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ClientUpdatePwdComponent = /*#__PURE__*/(() => {\n  class ClientUpdatePwdComponent {\n    constructor(formBuilder, userService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.submitted = false;\n    }\n\n    ngOnInit() {\n      this.userConnect = JSON.parse(localStorage.getItem(\"userConnect\") || \"\");\n      this.form1 = this.formBuilder.group({\n        'oldPwd': ['', Validators.required],\n        'newPwd': ['', Validators.required],\n        'confirmPwd': ['', Validators.required]\n      }, {\n        validator: OldPwdValidators.matchPwds\n      });\n    }\n\n    get oldPwd() {\n      return this.form1.get('oldPwd');\n    }\n\n    get newPwd() {\n      return this.form1.get('newPwd');\n    }\n\n    get confirmPwd() {\n      return this.form1.get('confirmPwd');\n    }\n\n    updatePwd(form) {\n      this.submitted = true;\n      this.userService.updatePwd(this.userConnect, form).subscribe(data => {\n        console.log(data.message);\n        Swal.fire({\n          position: 'top-end',\n          icon: 'success',\n          title: 'Edited',\n          showConfirmButton: false,\n          timer: 1500\n        });\n      });\n    }\n\n  }\n\n  ClientUpdatePwdComponent.ɵfac = function ClientUpdatePwdComponent_Factory(t) {\n    return new (t || ClientUpdatePwdComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService));\n  };\n\n  ClientUpdatePwdComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientUpdatePwdComponent,\n    selectors: [[\"app-client-update-pwd\"]],\n    decls: 34,\n    vars: 5,\n    consts: [[\"data-parallax\", \"scroll\", \"data-speed\", \"0.8\", 1, \"dark-wrapper\", \"opaqued\", \"parallax\"], [1, \"section-inner\"], [1, \"container\"], [1, \"row\"], [1, \"col-lg-12\", \"text-center\", \"mb100\"], [1, \"section-heading\"], [1, \"theme-accent-color\"], [1, \"thin-hr\"], [1, \"col-md-10\", \"col-md-offset-1\"], [\"id\", \"message\", 1, \"col-md-12\", \"col-lg-12\"], [3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"oldPwd\", \"id\", \"oldPwd\", \"type\", \"password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"formControlName\", \"newPwd\", \"id\", \"newPwd\", \"type\", \"password\", 1, \"form-control\"], [\"formControlName\", \"confirmPwd\", \"id\", \"confirmPwd\", \"type\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", \"name\", \"submit\", \"value\", \"Update\", 1, \"btn\", \"btn-primary\", \"btn-white\", \"mt30\", \"pull-right\", 2, \"margin-right\", \"45%\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [4, \"ngIf\"]],\n    template: function ClientUpdatePwdComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n        i0.ɵɵtext(6, \"Update \");\n        i0.ɵɵelementStart(7, \"span\", 6);\n        i0.ɵɵtext(8, \"Password\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(9, \"hr\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 3)(12, \"div\", 8)(13, \"div\", 3);\n        i0.ɵɵelement(14, \"div\", 9);\n        i0.ɵɵelementStart(15, \"form\", 10)(16, \"div\", 11)(17, \"label\");\n        i0.ɵɵtext(18, \"Old Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 12);\n        i0.ɵɵtemplate(20, ClientUpdatePwdComponent_div_20_Template, 3, 2, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"label\");\n        i0.ɵɵtext(23, \"New Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵtemplate(25, ClientUpdatePwdComponent_div_25_Template, 2, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 11)(27, \"label\");\n        i0.ɵɵtext(28, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 15);\n        i0.ɵɵtemplate(30, ClientUpdatePwdComponent_div_30_Template, 2, 1, \"div\", 13);\n        i0.ɵɵtemplate(31, ClientUpdatePwdComponent_div_31_Template, 2, 0, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"input\", 16);\n        i0.ɵɵlistener(\"click\", function ClientUpdatePwdComponent_Template_input_click_32_listener() {\n          return ctx.updatePwd(ctx.form1.value);\n        });\n        i0.ɵɵelementEnd()()()()()()()();\n        i0.ɵɵelement(33, \"app-footer\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.form1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.oldPwd.touched && ctx.oldPwd.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.newPwd.touched && ctx.newPwd.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmPwd.touched && ctx.confirmPwd.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.confirmPwd.valid && ctx.form1.invalid && ctx.form1.errors.pwdsDontMatch);\n      }\n    }\n  });\n  return ClientUpdatePwdComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}